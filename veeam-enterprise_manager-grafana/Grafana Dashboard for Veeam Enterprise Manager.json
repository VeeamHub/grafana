{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": [],
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "8.3.0"
    },
    {
      "type": "panel",
      "id": "graph",
      "name": "Graph (old)",
      "version": ""
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Grafana Dashboard for Veeam Enterprise Manager RESTful API.  (Grafana 8.x / InfluxDB v2.x)",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": 11516,
  "graphTooltip": 0,
  "id": null,
  "iteration": 1638873508225,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 61,
      "panels": [],
      "title": "Enterprise Manager - Summary",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-blue",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Successful Workloads"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "dark-green",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Warning VMs"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "dark-orange",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Failed VMs"
            },
            "properties": [
              {
                "id": "thresholds",
                "value": {
                  "mode": "absolute",
                  "steps": [
                    {
                      "color": "dark-red",
                      "value": null
                    }
                  ]
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Backup Servers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Number of Repositories"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "D"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Proxy Servers"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "H"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Protected VMs"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "I"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Replicated VMs"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "E"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Successful Workloads"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "F"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Warning VMs"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-orange",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "G"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Failed VMs"
              },
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 15,
        "x": 0,
        "y": 1
      },
      "id": 97,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "background",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "alias": "Backup Servers",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamBackupServers\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupServers"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Repository Servers",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamRepositoryServers\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamRepositoryServers"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Proxy Servers",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamProxyServers\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamProxyServers"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Protected VMs",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview_vms",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview_vms\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamProtectedVms\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "H",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamProtectedVms"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Replicated VMs",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview_vms",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview_vms\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamReplicatedVms\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "I",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamReplicatedVms"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Successful Workloads",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamSuccessfulVmLastestStates\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamSuccessfulVmLastestStates"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Warning VMs",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamWarningVmLastestStates\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "F",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamWarningVmLastestStates"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        },
        {
          "alias": "Failed VMs",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_overview",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamFailedVmLastestStates\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /${enterprisemanager:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "G",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamFailedVmLastestStates"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$enterprisemanager$/"
            }
          ]
        }
      ],
      "transformations": [],
      "type": "stat"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              },
              {
                "color": "dark-yellow",
                "value": 70
              },
              {
                "color": "dark-orange",
                "value": 80
              },
              {
                "color": "dark-red",
                "value": 90
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 15,
        "y": 1
      },
      "id": 289,
      "options": {
        "displayMode": "lcd",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "text": {}
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "alias": "$tag_veeamRepositoryName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview_repositories\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamRepositoryCapacity\" or r[\"_field\"] == \"veeamRepositoryFreeSpace\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamRepositoryName\"] =~ /${repository:regex}/) \r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({ r with  _value: float(v: r.veeamRepositoryFreeSpace) / float(v: r.veeamRepositoryCapacity) * 100.0 }))\r\n  |> group(columns: [\"veeamRepositoryName\",\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "timeFrom": "3h",
      "title": "Backup Repository - Usage Capacity",
      "type": "bargauge"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 9
      },
      "id": 25,
      "panels": [
        {
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "match": "null",
                    "result": {
                      "text": "N/A"
                    }
                  },
                  "type": "special"
                }
              ],
              "max": 100,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-green",
                    "value": null
                  },
                  {
                    "color": "dark-orange",
                    "value": 65
                  },
                  {
                    "color": "dark-red",
                    "value": 85
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 4,
            "w": 4,
            "x": 0,
            "y": 10
          },
          "id": 34,
          "links": [],
          "maxPerRow": 6,
          "options": {
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "showThresholdLabels": false,
            "showThresholdMarkers": true,
            "text": {}
          },
          "pluginVersion": "8.3.0",
          "repeat": "repository",
          "repeatDirection": "h",
          "targets": [
            {
              "alias": "",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "null"
                  ],
                  "type": "fill"
                }
              ],
              "hide": false,
              "measurement": "veeam_office365_repository",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview_repositories\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamRepositoryCapacity\" or r[\"_field\"] == \"veeamRepositoryFreeSpace\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamRepositoryName\"] =~ /${repository:regex}/) \r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({ r with  _value: float(v: r.veeamRepositoryFreeSpace) / float(v: r.veeamRepositoryCapacity) * 100.0 }))\r\n  |> group(columns: [\"veeamRepositoryName\",\"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "capacity"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "repository",
                  "operator": "=~",
                  "value": "/^$repository$/"
                }
              ]
            }
          ],
          "title": "$repository",
          "type": "gauge"
        }
      ],
      "title": "Backup Repositories - Overview",
      "type": "row"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 10
      },
      "id": 151,
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "links": []
            },
            "overrides": []
          },
          "fill": 5,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 0,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 543,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.3.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": true,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_host $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "host"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "win_cpu",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "Percent_Privileged_Time"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "% Privileged Time"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "Percent_User_Time"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "% User Time"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "Percent_Interrupt_Time"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "% Interrupt Time"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "host",
                  "operator": "=~",
                  "value": "/^$veeamserver$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeRegions": [],
          "title": "CPU Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "mode": "time",
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "percent",
              "label": "CPU Usage in %",
              "logBase": 1,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "show": false
            }
          ],
          "yaxis": {
            "align": false
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "links": []
            },
            "overrides": []
          },
          "fill": 5,
          "fillGradient": 0,
          "gridPos": {
            "h": 5,
            "w": 12,
            "x": 12,
            "y": 11
          },
          "hiddenSeries": false,
          "id": 544,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.3.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_host $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "host"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "win_mem",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "Available_Bytes"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Available Bytes"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "Pool_Nonpaged_Bytes"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Pool non-paged Bytes"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "Pool_Paged_Bytes"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Pool paged Bytes"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "host",
                  "operator": "=~",
                  "value": "/^$veeamserver$/"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeRegions": [],
          "title": "RAM Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "mode": "time",
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "decbytes",
              "label": "RAM Usage in bytes",
              "logBase": 1,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "show": false
            }
          ],
          "yaxis": {
            "align": false
          }
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [
                {
                  "options": {
                    "match": "null",
                    "result": {
                      "text": "N/A"
                    }
                  },
                  "type": "special"
                }
              ],
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-blue",
                    "value": null
                  }
                ]
              },
              "unit": "s"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 3,
            "x": 0,
            "y": 16
          },
          "id": 542,
          "links": [],
          "maxDataPoints": 100,
          "options": {
            "colorMode": "background",
            "fieldOptions": {
              "calcs": [
                "lastNotNull"
              ]
            },
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.3.0",
          "targets": [
            {
              "groupBy": [],
              "measurement": "win_system",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT \"System_Up_Time\" FROM \"win_system\" WHERE (\"host\" =~ /^$vboserver$/) AND $timeFilter",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "System_Up_Time"
                    ],
                    "type": "field"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "host",
                  "operator": "=~",
                  "value": "/^$veeamserver$/"
                }
              ]
            }
          ],
          "title": "Uptime",
          "type": "stat"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "mappings": [],
              "max": 100,
              "min": 0,
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "dark-green",
                    "value": null
                  },
                  {
                    "color": "dark-yellow",
                    "value": 80
                  },
                  {
                    "color": "dark-red",
                    "value": 90
                  }
                ]
              },
              "unit": "percent"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 6,
            "w": 10,
            "x": 3,
            "y": 16
          },
          "id": 545,
          "links": [],
          "options": {
            "displayMode": "lcd",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "mean"
              ],
              "fields": "",
              "values": false
            },
            "showUnfilled": true,
            "text": {}
          },
          "pluginVersion": "8.3.0",
          "targets": [
            {
              "alias": "$tag_instance",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "instance"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "linear"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "win_disk",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "SELECT 100 - (mean(\"Percent_Free_Space\")) FROM \"win_disk\" WHERE (\"host\" =~ /^$veeamserver$/ ) AND (\"instance\" !='HarddiskVolume1') AND $timeFilter GROUP BY time($__interval), \"instance\" fill(linear)",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "Percent_Free_Space"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "host",
                  "operator": "=~",
                  "value": "/^$vboserver$/"
                },
                {
                  "condition": "AND",
                  "key": "instance",
                  "operator": "=~",
                  "value": "/^$disk$/"
                }
              ]
            }
          ],
          "title": "Disk Usage",
          "type": "bargauge"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "fieldConfig": {
            "defaults": {
              "links": []
            },
            "overrides": []
          },
          "fill": 5,
          "fillGradient": 0,
          "gridPos": {
            "h": 6,
            "w": 11,
            "x": 13,
            "y": 16
          },
          "hiddenSeries": false,
          "id": 546,
          "legend": {
            "alignAsTable": false,
            "avg": false,
            "current": false,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": false,
            "show": false,
            "total": false,
            "values": false
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {
            "alertThreshold": true
          },
          "percentage": false,
          "pluginVersion": "8.3.0",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "alias": "$tag_host $col",
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "host"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "win_net",
              "orderByTime": "ASC",
              "policy": "default",
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "Bytes_Received_persec"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Bytes received"
                    ],
                    "type": "alias"
                  }
                ],
                [
                  {
                    "params": [
                      "Bytes_Sent_persec"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "mean"
                  },
                  {
                    "params": [
                      "Bytes sent"
                    ],
                    "type": "alias"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "host",
                  "operator": "=~",
                  "value": "/^$veeamserver$/"
                },
                {
                  "condition": "AND",
                  "key": "instance",
                  "operator": "=",
                  "value": "vmxnet3 Ethernet Adapter _2"
                }
              ]
            }
          ],
          "thresholds": [],
          "timeRegions": [],
          "title": "Network Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "type": "graph",
          "xaxis": {
            "mode": "time",
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 2,
              "format": "decbytes",
              "label": "Net Usage in bytes",
              "logBase": 1,
              "show": true
            },
            {
              "format": "short",
              "logBase": 1,
              "show": false
            }
          ],
          "yaxis": {
            "align": false
          }
        }
      ],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Veeam Backup Performance",
      "type": "row"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "id": 569,
      "panels": [],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Backup Jobs",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [
            {
              "options": {
                "1": {
                  "text": "Success"
                },
                "2": {
                  "text": "Warning"
                },
                "3": {
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(133, 133, 133)",
                "value": null
              },
              {
                "color": "dark-green",
                "value": 0
              },
              {
                "color": "dark-orange",
                "value": 1.1
              },
              {
                "color": "dark-red",
                "value": 2.1
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 12
      },
      "id": 109,
      "links": [],
      "maxDataPoints": 100,
      "maxPerRow": 6,
      "options": {
        "colorMode": "background",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0",
      "repeat": "backupjob",
      "repeatDirection": "h",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamBackupSessionsJobResult\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsName\"] =~ /${backupjob:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsJobType\"] =~ /${backuptype:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsJobResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsName",
              "operator": "=~",
              "value": "/^$backupjob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            },
            {
              "condition": "AND",
              "key": "veeamBackupSessionsJobType",
              "operator": "=~",
              "value": "/^$backuptype$/"
            }
          ]
        }
      ],
      "title": "$backupjob - Last Result",
      "type": "stat"
    },
    {
      "collapsed": true,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 608,
      "panels": [
        {
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [
                {
                  "options": {
                    "1": {
                      "text": "Success"
                    },
                    "2": {
                      "text": "Warning"
                    },
                    "3": {
                      "text": "Failed"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "rgb(133, 133, 133)",
                    "value": null
                  },
                  {
                    "color": "dark-green",
                    "value": 0
                  },
                  {
                    "color": "dark-orange",
                    "value": 1.1
                  },
                  {
                    "color": "dark-red",
                    "value": 2.1
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 3,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 354,
          "links": [],
          "maxDataPoints": 100,
          "maxPerRow": 6,
          "options": {
            "colorMode": "background",
            "fieldOptions": {
              "calcs": [
                "lastNotNull"
              ]
            },
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "8.3.0",
          "repeat": "replicajob",
          "repeatDirection": "h",
          "targets": [
            {
              "alias": "$tag_veeamReplicaSessionsName",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "veeamReplicaSessionsName"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "veeam_em_job_sessions",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamReplicaSessionsJobResult\")\r\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsName\"] =~ /${replicajob:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "rawQuery": true,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "veeamReplicaSessionsJobResult"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "veeamReplicaSessionsName",
                  "operator": "=~",
                  "value": "/^$replicajob$/"
                },
                {
                  "condition": "AND",
                  "key": "veeamVBR",
                  "operator": "=~",
                  "value": "/^$veeamserver$/"
                }
              ]
            }
          ],
          "title": "$replicajob - Last Result",
          "type": "stat"
        }
      ],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Replica Jobs",
      "type": "row"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 622,
      "panels": [],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Protected VMs",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "text": "Success"
                },
                "2": {
                  "text": "Warning"
                },
                "3": {
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(133, 133, 133)",
                "value": null
              },
              {
                "color": "dark-green",
                "value": 1
              },
              {
                "color": "dark-orange",
                "value": 2
              },
              {
                "color": "dark-red",
                "value": 3
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 2,
        "x": 0,
        "y": 23
      },
      "id": 369,
      "links": [],
      "maxDataPoints": 100,
      "maxPerRow": 12,
      "options": {
        "colorMode": "background",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0",
      "repeat": "backupvm",
      "repeatDirection": "h",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsVmDisplayName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsVmDisplayName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessionsvm",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessionsvm\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamBackupSessionsJobVMResult\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsVmDisplayName\"] =~ /${backupvm:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n |> group(columns: [\"veeamBackupSessionsVmDisplayName\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsJobVMResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsVmDisplayName",
              "operator": "=~",
              "value": "/^$backupvm$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            }
          ]
        }
      ],
      "title": "$backupvm",
      "type": "stat"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 31
      },
      "id": 625,
      "panels": [],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Replicated VMs",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "1": {
                  "text": "Success"
                },
                "2": {
                  "text": "Warning"
                },
                "3": {
                  "text": "Failed"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(133, 133, 133)",
                "value": null
              },
              {
                "color": "dark-green",
                "value": 0
              },
              {
                "color": "dark-orange",
                "value": 1.1
              },
              {
                "color": "dark-red",
                "value": 2.1
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 32
      },
      "id": 435,
      "links": [],
      "maxDataPoints": 100,
      "maxPerRow": 12,
      "options": {
        "colorMode": "background",
        "fieldOptions": {
          "calcs": [
            "lastNotNull"
          ]
        },
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.3.0",
      "repeat": "replicavm",
      "repeatDirection": "h",
      "targets": [
        {
          "alias": "$tag_veeamReplicaSessionsVmDisplayName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamReplicaSessionsVmDisplayName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessionsvm",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessionsvm\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamReplicaSessionsJobVMResult\")\r\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsVmDisplayName\"] =~ /${replicavm:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamReplicaSessionsJobVMResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamReplicaSessionsVmDisplayName",
              "operator": "=~",
              "value": "/^$replicavm$/"
            }
          ]
        }
      ],
      "title": "$replicavm",
      "type": "stat"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 36
      },
      "id": 668,
      "panels": [],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Veeam Agents Overview",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "displayMode": "color-background",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-blue",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Agent Status"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "text": "✅"
                      },
                      "2": {
                        "text": "⚠️"
                      },
                      "3": {
                        "text": "❌"
                      }
                    },
                    "type": "value"
                  },
                  {
                    "options": {
                      "match": "null",
                      "result": {
                        "text": "No info"
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Last Seen"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "text": "✅"
                      },
                      "2": {
                        "text": "❌"
                      }
                    },
                    "type": "value"
                  },
                  {
                    "options": {
                      "match": "null",
                      "result": {
                        "text": "No info"
                      }
                    },
                    "type": "special"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Veeam Agent version"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "text": "No info"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Veeam Agent OS Version"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "text": "No info"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "hideTimeOverride": false,
      "id": 750,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "frameIndex": 0,
        "showHeader": true
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "alias": "$tag_veeamAgentName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "veeamAgentName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "veeamAgentOsVersion"
              ],
              "type": "tag"
            },
            {
              "params": [
                "veeamAgentVersion"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_agents",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_agents\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamAgentStatus\" )\r\n  |> filter(fn: (r) => r[\"veeamAgentName\"] =~ /${veeamagent:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> group(columns: [\"veeamAgentName\",\"veeamAgentOsVersion\",\"veeamAgentVersion\"])\r\n  |> last()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "veeamAgentStatus"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "agentstatus"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamAgentName",
              "operator": "=~",
              "value": "/^$veeamagent$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            }
          ],
          "tz": ""
        }
      ],
      "title": "Veeam Agent Status and Information",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamAgentName",
              "veeamAgentOsVersion",
              "veeamAgentVersion"
            ]
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_start": true,
              "_stop": true,
              "_time": true
            },
            "indexByName": {
              "_field": 1,
              "_measurement": 2,
              "_start": 8,
              "_stop": 9,
              "_time": 0,
              "_value": 6,
              "veeamAgentName": 4,
              "veeamAgentOsVersion": 5,
              "veeamAgentVersion": 7,
              "veeamVBR": 3
            },
            "renameByName": {
              "_value": "Agent Status",
              "veeamAgentName": "Veeam Agent Name",
              "veeamAgentOsVersion": "Veeam Agent OS Version",
              "veeamAgentVersion": "Veeam Agent Version",
              "veeamVBR": "VBR Server"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 43
      },
      "id": 752,
      "panels": [],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Veeam NAS Backup Overview",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "displayMode": "color-background",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-purple",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Veeam NAS Job Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 235
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SMB/CIFS Path"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 169
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 13,
        "x": 0,
        "y": 44
      },
      "hideTimeOverride": false,
      "id": 755,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "alias": "$tag_veeamAgentName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "veeamNASJobName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "veeamNASJobPath"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_nas_jobs",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_nas_jobs\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamNASJobShortTerm\" )\r\n  |> filter(fn: (r) => r[\"veeamNASJobPath\"] =~ /${veeamnas:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> group(columns: [\"veeamNASJobName\",\"veeamAgeveeamNASJobPathntOsVersion\",\"veeamNASJobShortTermType\",\"veeamNASJobExclusions\"])\r\n  |> last()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "veeamNASJobShortTerm"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Short-Term"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamNASJobPath",
              "operator": "=~",
              "value": "/^$veeamnas$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            }
          ],
          "tz": ""
        },
        {
          "alias": "$tag_veeamAgentName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "veeamNASJobShortTermType"
              ],
              "type": "tag"
            },
            {
              "params": [
                "veeamNASJobExclusions"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "hide": true,
          "measurement": "veeam_em_nas_jobs",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "SELECT last(\"veeamNASJobShortTerm\") AS \"Short-Term\" FROM \"veeam_em_nas_jobs\" WHERE (\"veeamNASJobPath\" =~ /^$veeamnas$/ AND \"veeamVBR\" =~ /^$veeamserver$/) AND $timeFilter GROUP BY \"veeamNASJobShortTermType\", \"veeamNASJobExclusions\" fill(none)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "veeamNASJobShortTerm"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Short-Term"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamNASJobPath",
              "operator": "=~",
              "value": "/^$veeamnas$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            }
          ],
          "tz": ""
        }
      ],
      "title": "Veeam NAS Jobs Status and Information",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamNASJobExclusions",
              "veeamNASJobName",
              "veeamNASJobShortTermType"
            ]
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "Time": true,
              "_field": true,
              "_measurement": true,
              "_time": true
            },
            "indexByName": {
              "_field": 1,
              "_measurement": 2,
              "_time": 0,
              "_value": 6,
              "veeamNASJobExclusions": 7,
              "veeamNASJobName": 4,
              "veeamNASJobPath": 5,
              "veeamNASJobShortTermType": 8,
              "veeamVBR": 3
            },
            "renameByName": {
              "Short-Term": "Short-Term Retention",
              "_value": "Short Term Retention",
              "veeamNASJobExclusions": "NAS Exclusions",
              "veeamNASJobName": "Veeam NAS Job Name",
              "veeamNASJobPath": "SMB/CIFS Path",
              "veeamNASJobShortTermType": "Retention Type",
              "veeamVBR": "VBR Server"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "Job Duration",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "points",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 8,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "s"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 11,
        "x": 13,
        "y": 44
      },
      "hideTimeOverride": false,
      "id": 756,
      "links": [],
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "mean",
            "lastNotNull",
            "max",
            "min",
            "sum"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "7.4.1",
      "targets": [
        {
          "alias": "$tag_veeamNASJobName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamNASJobName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_nas_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_nas_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamNASJobDuration\")\r\n  |> filter(fn: (r) => r[\"veeamNASJobName\"] =~ /${veeamnasjob:regex}/)\r\n  |> group(columns: [\"veeamNASJobName\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamNASJobDuration"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamNASJobName",
              "operator": "=~",
              "value": "/^$veeamnasjob$/"
            }
          ]
        }
      ],
      "timeFrom": "7d",
      "title": "Job Duration",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 53
      },
      "id": 627,
      "panels": [],
      "repeat": "veeamserver",
      "title": "$veeamserver v$veeamversionM ($veeamversion) - Job Historical Performance and Duration",
      "type": "row"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(64, 64, 64)",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "displayMode": "color-background",
            "filterable": false
          },
          "decimals": 0,
          "displayName": "",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Time"
              },
              {
                "id": "unit",
                "value": "time: MMMM D, YYYY LT"
              },
              {
                "id": "custom.align"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Job Result"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Job Result"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "text": "🟢"
                      },
                      "2": {
                        "text": "🟡"
                      },
                      "3": {
                        "text": "🔴"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 54
      },
      "hideTimeOverride": false,
      "id": 113,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.3.0",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamBackupSessionsJobResult\" )\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsName\"] =~ /${backupjob:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsJobType\"] =~ /${backuptype:regex}/)\r\n  |> group(columns: [\"veeamBackupSessionsName\"])\r\n  |> last()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsJobResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsName",
              "operator": "=~",
              "value": "/^$backupjob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            },
            {
              "condition": "AND",
              "key": "veeamBackupSessionsJobType",
              "operator": "=~",
              "value": "/^$backuptype$/"
            }
          ]
        }
      ],
      "title": "Job Historical Information",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamBackupSessionsName"
            ]
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "veeamBackupSessionsJobState": true,
              "veeamBackupSessionsJobType": true
            },
            "indexByName": {
              "_field": 0,
              "_measurement": 1,
              "_time": 4,
              "_value": 7,
              "veeamBackupSessionsJobState": 2,
              "veeamBackupSessionsJobType": 3,
              "veeamBackupSessionsName": 6,
              "veeamVBR": 5
            },
            "renameByName": {
              "_field": "",
              "_time": "Time",
              "_value": "Job Result",
              "veeamBackupSessionsJobState": "",
              "veeamBackupSessionsJobType": "",
              "veeamBackupSessionsName": "Job Name",
              "veeamVBR": "VBR Server"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "Job Duration",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "points",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 7,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "hidden"
              },
              {
                "id": "unit",
                "value": "s"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 54
      },
      "hideTimeOverride": false,
      "id": 463,
      "interval": "",
      "links": [],
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "pluginVersion": "7.4.1",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamBackupSessionsTimeDuration\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsName\"] =~ /${backupjob:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsJobType\"] =~ /${backuptype:regex}/)\r\n  |> group(columns: [\"veeamBackupSessionsName\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsTimeDuration"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsName",
              "operator": "=~",
              "value": "/^$backupjob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            },
            {
              "condition": "AND",
              "key": "veeamBackupSessionsJobType",
              "operator": "=~",
              "value": "/^$backuptype$/"
            }
          ]
        },
        {
          "alias": "$tag_veeamReplicaSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamReplicaSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamReplicaSessionsDuration\")\r\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsName\"] =~ /${replicajob:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${veeamserver:regex}/)\r\n  |> group(columns: [\"veeamReplicaSessionsName\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamReplicaSessionsDuration"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamReplicaSessionsName",
              "operator": "=~",
              "value": "/^$replicajob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            }
          ]
        }
      ],
      "timeFrom": "7d",
      "title": "Job Duration (All type)",
      "type": "timeseries"
    }
  ],
  "refresh": false,
  "schemaVersion": 33,
  "style": "dark",
  "tags": [
    "Veeam",
    "Enterprise Manager"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> keep(columns: [\"host\"])\r\n  |> distinct(column: \"host\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Enterprise Manager",
        "multi": true,
        "name": "enterprisemanager",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview\")\r\n  |> keep(columns: [\"host\"])\r\n  |> distinct(column: \"host\")\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> keep(columns: [\"veeamVBR\"])\r\n  |> distinct(column: \"veeamVBR\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Veeam Backup Server",
        "multi": true,
        "name": "veeamserver",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> keep(columns: [\"veeamVBR\"])\r\n  |> distinct(column: \"veeamVBR\")\r\n  |> group()",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview_repositories\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> filter(fn: (r) => r[\"veeamRepositoryName\"] != \"\")\r\n  |> keep(columns: [\"veeamRepositoryName\"])\r\n  |> distinct(column: \"veeamRepositoryName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Backup Repository",
        "multi": true,
        "name": "repository",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_overview_repositories\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> filter(fn: (r) => r[\"veeamRepositoryName\"] != \"\")\r\n  |> keep(columns: [\"veeamRepositoryName\"])\r\n  |> distinct(column: \"veeamRepositoryName\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsName\"] != \"\")\r\n  |> keep(columns: [\"veeamBackupSessionsName\"])\r\n  |> distinct(column: \"veeamBackupSessionsName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Backup Job",
        "multi": true,
        "name": "backupjob",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsName\"] != \"\")\r\n  |> keep(columns: [\"veeamBackupSessionsName\"])\r\n  |> distinct(column: \"veeamBackupSessionsName\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsName\"] != \"\")\r\n  |> keep(columns: [\"veeamReplicaSessionsName\"])\r\n  |> distinct(column: \"veeamReplicaSessionsName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Replica Job",
        "multi": true,
        "name": "replicajob",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsName\"] != \"\")\r\n  |> keep(columns: [\"veeamReplicaSessionsName\"])\r\n  |> distinct(column: \"veeamReplicaSessionsName\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessionsvm\" )\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsVmDisplayName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupSessionsVmDisplayName\"])\r\n  |> distinct(column: \"veeamBackupSessionsVmDisplayName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Protected VM",
        "multi": true,
        "name": "backupvm",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessionsvm\" )\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsVmDisplayName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupSessionsVmDisplayName\"])\r\n  |> distinct(column: \"veeamBackupSessionsVmDisplayName\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessionsvm\")\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsVmDisplayName\"] != \"\")\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\n  |> keep(columns: [\"veeamReplicaSessionsVmDisplayName\"])\n  |> distinct(column: \"veeamReplicaSessionsVmDisplayName\")\n  |> group()\n\n",
        "hide": 0,
        "includeAll": true,
        "label": "Replicated VM",
        "multi": true,
        "name": "replicavm",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessionsvm\")\n  |> filter(fn: (r) => r[\"veeamReplicaSessionsVmDisplayName\"] != \"\")\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\n  |> keep(columns: [\"veeamReplicaSessionsVmDisplayName\"])\n  |> distinct(column: \"veeamReplicaSessionsVmDisplayName\")\n  |> group()\n\n",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_backup_servers\")\r\n  |> filter(fn: (r) => r[\"veeamBackupServersVersion\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupServersVersion\"])\r\n  |> distinct(column: \"veeamBackupServersVersion\")\r\n  |> group()",
        "hide": 2,
        "includeAll": false,
        "label": "",
        "multi": false,
        "name": "veeamversion",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_backup_servers\")\r\n  |> filter(fn: (r) => r[\"veeamBackupServersVersion\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupServersVersion\"])\r\n  |> distinct(column: \"veeamBackupServersVersion\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 4,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_backup_servers\")\r\n  |> filter(fn: (r) => r[\"veeamBackupServersVersionM\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupServersVersionM\"])\r\n  |> distinct(column: \"veeamBackupServersVersionM\")\r\n  |> group()",
        "hide": 2,
        "includeAll": false,
        "label": "",
        "multi": true,
        "name": "veeamversionM",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_backup_servers\")\r\n  |> filter(fn: (r) => r[\"veeamBackupServersVersionM\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupServersVersionM\"])\r\n  |> distinct(column: \"veeamBackupServersVersionM\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 4,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_agents\")\r\n  |> filter(fn: (r) => r[\"veeamAgentName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamAgentName\"])\r\n  |> distinct(column: \"veeamAgentName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Veeam Agent",
        "multi": true,
        "name": "veeamagent",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_agents\")\r\n  |> filter(fn: (r) => r[\"veeamAgentName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamAgentName\"])\r\n  |> distinct(column: \"veeamAgentName\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_nas_jobs\")\r\n  |> filter(fn: (r) => r[\"veeamNASJobPath\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamNASJobPath\"])\r\n  |> distinct(column: \"veeamNASJobPath\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "NAS",
        "multi": true,
        "name": "veeamnas",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_nas_jobs\")\r\n  |> filter(fn: (r) => r[\"veeamNASJobPath\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamNASJobPath\"])\r\n  |> distinct(column: \"veeamNASJobPath\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_nas_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamNASJobName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamNASJobName\"])\r\n  |> distinct(column: \"veeamNASJobName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "NAS  Job",
        "multi": true,
        "name": "veeamnasjob",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_nas_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamNASJobName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamNASJobName\"])\r\n  |> distinct(column: \"veeamNASJobName\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsJobType\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupSessionsJobType\"])\r\n  |> distinct(column: \"veeamBackupSessionsJobType\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Job Type",
        "multi": true,
        "name": "backuptype",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_em_job_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamBackupSessionsJobType\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] == \"${veeamserver}\")\r\n  |> keep(columns: [\"veeamBackupSessionsJobType\"])\r\n  |> distinct(column: \"veeamBackupSessionsJobType\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "browser",
  "title": "Grafana Dashboard for Veeam Enterprise Manager",
  "uid": "WmrXrCYZk",
  "version": 20,
  "weekStart": ""
}