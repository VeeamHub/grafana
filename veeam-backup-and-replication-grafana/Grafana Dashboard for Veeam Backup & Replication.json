{
  "__inputs": [
    {
      "name": "DS_INFLUXDB",
      "label": "InfluxDB",
      "description": "",
      "type": "datasource",
      "pluginId": "influxdb",
      "pluginName": "InfluxDB"
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "bargauge",
      "name": "Bar gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "11.1.4"
    },
    {
      "type": "datasource",
      "id": "influxdb",
      "name": "InfluxDB",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "description": "Grafana Dashboard for Veeam Backup & Replication REST API.",
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 26,
      "panels": [],
      "title": "$vbrserver - v$vbrmajorversion | Job Historical Data",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(64, 64, 64)",
            "mode": "fixed"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Jobs",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 70,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 2,
            "pointSize": 6,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "A"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Success"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-yellow",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Warning"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "C"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              },
              {
                "id": "displayName",
                "value": "Error"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 1
      },
      "hideTimeOverride": false,
      "id": 4,
      "interval": "1d",
      "maxDataPoints": 50000,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.3",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRSessionsJobResult\")\r\n  |> filter(fn: (r) => r[\"_value\"] == 1) \r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] =~ /${vbrjobs:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> window(every: 24h)\r\n  |> count() \r\n  |> group()\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsJobResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsName",
              "operator": "=~",
              "value": "/^$backupjob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            },
            {
              "condition": "AND",
              "key": "veeamBackupSessionsJobType",
              "operator": "=~",
              "value": "/^$backuptype$/"
            }
          ]
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRSessionsJobResult\")\r\n  |> filter(fn: (r) => r[\"_value\"] == 2) \r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] =~ /${vbrjobs:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> window(every: 24h)\r\n  |> count() \r\n  |> group()\r\n",
          "refId": "B"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRSessionsJobResult\")\r\n  |> filter(fn: (r) => r[\"_value\"] == 3) \r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] =~ /${vbrjobs:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> window(every: 24h)\r\n  |> count() \r\n  |> group()\r\n",
          "refId": "C"
        }
      ],
      "title": "Job Historical Information",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(64, 64, 64)",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "mode": "gradient",
              "type": "color-background"
            },
            "filterable": true,
            "inspect": false
          },
          "decimals": 0,
          "displayName": "",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Time"
              },
              {
                "id": "unit",
                "value": "time: MMMM D, YYYY LT"
              },
              {
                "id": "custom.align"
              },
              {
                "id": "custom.width",
                "value": 179
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Job Result"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Job Result"
              },
              {
                "id": "custom.align",
                "value": "center"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "color": "#2a9d8f",
                        "index": 2,
                        "text": "Success"
                      },
                      "2": {
                        "color": "#f4a261",
                        "index": 1,
                        "text": "Warning"
                      },
                      "3": {
                        "color": "#e63946",
                        "index": 0,
                        "text": "Error"
                      }
                    },
                    "type": "value"
                  }
                ]
              },
              {
                "id": "custom.width"
              },
              {
                "id": "custom.cellOptions",
                "value": {
                  "mode": "basic",
                  "type": "color-background"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Job Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 328
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Veeam Server"
            },
            "properties": [
              {
                "id": "custom.width"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "hideTimeOverride": false,
      "id": 2,
      "maxDataPoints": 50000,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Time"
          }
        ]
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRSessionsJobResult\" )\r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] =~ /${vbrjobs:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> group(columns: [\"veeamVBRSessionJobName\"])\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsJobResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsName",
              "operator": "=~",
              "value": "/^$backupjob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            },
            {
              "condition": "AND",
              "key": "veeamBackupSessionsJobType",
              "operator": "=~",
              "value": "/^$backuptype$/"
            }
          ]
        }
      ],
      "title": "Job Historical Information",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamBackupSessionsName",
              "veeamVBRSessionJobName"
            ],
            "mode": "columns"
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_time": false,
              "veeamBackupSessionsJobState": true,
              "veeamBackupSessionsJobType": true,
              "veeamVBRSessionsJobResultMessage": true,
              "veeamVBRSessionsJobState": true,
              "veeamVBRSessiontype": false
            },
            "indexByName": {
              "_field": 0,
              "_measurement": 1,
              "_time": 2,
              "_value": 5,
              "veeamVBR": 4,
              "veeamVBRSessionJobName": 3,
              "veeamVBRSessionsJobResultMessage": 7,
              "veeamVBRSessionsJobState": 8,
              "veeamVBRSessiontype": 6
            },
            "renameByName": {
              "_field": "",
              "_time": "Time",
              "_value": "Job Result",
              "veeamBackupSessionsJobState": "",
              "veeamBackupSessionsJobType": "",
              "veeamBackupSessionsName": "Job Name",
              "veeamVBR": "Veeam Server",
              "veeamVBRSessionJobName": "Job Name",
              "veeamVBRSessiontype": "Type"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "rgb(64, 64, 64)",
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "Job Duration",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "points",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 7,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "displayName": "${__field.labels.veeamVBRSessionJobName}",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgba(50, 172, 45, 0.97)",
                "value": null
              }
            ]
          },
          "unit": "s"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Time"
              },
              {
                "id": "unit",
                "value": "time: MMMM D, YYYY LT"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Job Result"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Job Result"
              },
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "1": {
                        "text": "🟢"
                      },
                      "2": {
                        "text": "🟡"
                      },
                      "3": {
                        "text": "🔴"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "hideTimeOverride": false,
      "id": 3,
      "maxDataPoints": 50000,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "table",
          "placement": "right",
          "showLegend": true
        },
        "tooltip": {
          "maxHeight": 600,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.4.3",
      "targets": [
        {
          "alias": "$tag_veeamBackupSessionsName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "veeamBackupSessionsName"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "veeam_em_job_sessions",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamBackupSessionsTimeDuration\")\r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] =~ /${vbrjobs:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> filter(fn: (r) => r[\"_value\"] > 0) // exclude negative values\r\n  |> filter(fn: (r) => r[\"_value\"] <= 86400) // exclude values greater than 86400 seconds\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "veeamBackupSessionsJobResult"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "veeamBackupSessionsName",
              "operator": "=~",
              "value": "/^$backupjob$/"
            },
            {
              "condition": "AND",
              "key": "veeamVBR",
              "operator": "=~",
              "value": "/^$veeamserver$/"
            },
            {
              "condition": "AND",
              "key": "veeamBackupSessionsJobType",
              "operator": "=~",
              "value": "/^$backuptype$/"
            }
          ]
        }
      ],
      "title": "Job Historical Information",
      "type": "timeseries"
    },
    {
      "collapsed": true,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 18
      },
      "id": 16,
      "panels": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "description": "",
          "fieldConfig": {
            "defaults": {
              "color": {
                "mode": "thresholds"
              },
              "decimals": 0,
              "mappings": [
                {
                  "options": {
                    "1": {
                      "text": "Success"
                    },
                    "2": {
                      "text": "Warning"
                    },
                    "3": {
                      "text": "Failed"
                    }
                  },
                  "type": "value"
                }
              ],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {
                    "color": "rgb(133, 133, 133)"
                  },
                  {
                    "color": "dark-green",
                    "value": 0
                  },
                  {
                    "color": "dark-orange",
                    "value": 1.1
                  },
                  {
                    "color": "dark-red",
                    "value": 2.1
                  }
                ]
              },
              "unit": "short"
            },
            "overrides": []
          },
          "gridPos": {
            "h": 5,
            "w": 4,
            "x": 0,
            "y": 20
          },
          "id": 6,
          "links": [],
          "maxDataPoints": 100,
          "maxPerRow": 6,
          "options": {
            "colorMode": "background",
            "fieldOptions": {
              "calcs": [
                "lastNotNull"
              ]
            },
            "graphMode": "none",
            "justifyMode": "auto",
            "orientation": "horizontal",
            "reduceOptions": {
              "calcs": [
                "lastNotNull"
              ],
              "fields": "",
              "values": false
            },
            "text": {},
            "textMode": "auto"
          },
          "pluginVersion": "9.5.2",
          "repeat": "vbrjobs",
          "repeatDirection": "h",
          "targets": [
            {
              "alias": "$tag_veeamBackupSessionsName",
              "datasource": {
                "type": "influxdb",
                "uid": "${DS_INFLUXDB}"
              },
              "groupBy": [
                {
                  "params": [
                    "$__interval"
                  ],
                  "type": "time"
                },
                {
                  "params": [
                    "veeamBackupSessionsName"
                  ],
                  "type": "tag"
                },
                {
                  "params": [
                    "none"
                  ],
                  "type": "fill"
                }
              ],
              "measurement": "veeam_em_job_sessions",
              "orderByTime": "ASC",
              "policy": "default",
              "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRSessionsJobResult\")\r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] =~ /${vbrjobs:regex}/)\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> group()\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
              "rawQuery": false,
              "refId": "A",
              "resultFormat": "time_series",
              "select": [
                [
                  {
                    "params": [
                      "veeamBackupSessionsJobResult"
                    ],
                    "type": "field"
                  },
                  {
                    "params": [],
                    "type": "last"
                  }
                ]
              ],
              "tags": [
                {
                  "key": "veeamBackupSessionsName",
                  "operator": "=~",
                  "value": "/^$backupjob$/"
                },
                {
                  "condition": "AND",
                  "key": "veeamVBR",
                  "operator": "=~",
                  "value": "/^$veeamserver$/"
                },
                {
                  "condition": "AND",
                  "key": "veeamBackupSessionsJobType",
                  "operator": "=~",
                  "value": "/^$backuptype$/"
                }
              ]
            }
          ],
          "title": "$vbrjobs - Last Result",
          "type": "stat"
        }
      ],
      "title": "$vbrserver - v$vbrmajorversion | Job Last Result",
      "type": "row"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 19
      },
      "id": 36,
      "panels": [],
      "title": "$vbrserver - v$vbrmajorversion | Infrastructure",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-blue",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "mode": "gradient",
              "type": "color-background"
            },
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 267
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Description"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 439
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 12,
        "x": 0,
        "y": 20
      },
      "id": 46,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_managedservers\")\r\n  |> filter(fn: (r) => r[\"veeamVBRMSName\"] =~ /${vbrmanaged:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRMSInternalID\")\r\n  |> group(columns: [\"veeamVBRMSName\"])\r\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "Managed Servers",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamVBRMSName"
            ]
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_time": true,
              "_value": true
            },
            "indexByName": {
              "_field": 2,
              "_measurement": 3,
              "_time": 0,
              "_value": 1,
              "veeamVBRMSDescription": 5,
              "veeamVBRMSName": 4,
              "veeamVBRMStype": 6
            },
            "renameByName": {
              "veeamVBRMSDescription": "Description",
              "veeamVBRMSName": "Name",
              "veeamVBRMStype": "Type"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "dark-purple",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "mode": "gradient",
              "type": "color-background"
            },
            "inspect": false
          },
          "mappings": [
            {
              "options": {
                "ViProxy": {
                  "index": 0,
                  "text": "VMware vSphere"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 242
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Description"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 241
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Mode"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 95
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Type"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 157
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 12,
        "x": 12,
        "y": 20
      },
      "id": 55,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_proxies\")\r\n  |> filter(fn: (r) => r[\"veeamVBRProxyName\"] =~ /${vbrproxies:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRProxyTask\")\r\n  |> group(columns: [\"veeamVBRProxyName\"])\r\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "Proxies",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamVBRMSName",
              "veeamVBRProxyName"
            ]
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_time": true,
              "_value": false
            },
            "indexByName": {
              "_field": 1,
              "_measurement": 2,
              "_time": 0,
              "_value": 7,
              "veeamVBRProxyDescription": 4,
              "veeamVBRProxyMode": 5,
              "veeamVBRProxyName": 3,
              "veeamVBRProxytype": 6
            },
            "renameByName": {
              "_value": "Concurrent Tasks",
              "veeamVBRMSDescription": "Description",
              "veeamVBRMSName": "Name",
              "veeamVBRMStype": "Type",
              "veeamVBRProxyDescription": "Description",
              "veeamVBRProxyMode": "Mode",
              "veeamVBRProxyName": "Name",
              "veeamVBRProxytype": "Type"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "decimals": 2,
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-green",
                "value": null
              },
              {
                "color": "dark-yellow",
                "value": 70
              },
              {
                "color": "dark-orange",
                "value": 80
              },
              {
                "color": "dark-red",
                "value": 90
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "B"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "max"
              },
              {
                "id": "color",
                "value": {
                  "mode": "palette-classic"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 33
      },
      "id": 209,
      "options": {
        "displayMode": "lcd",
        "maxVizHeight": 300,
        "minVizHeight": 10,
        "minVizWidth": 0,
        "namePlacement": "auto",
        "orientation": "vertical",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showUnfilled": true,
        "sizing": "auto",
        "text": {},
        "valueMode": "color"
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "alias": "$tag_veeamRepositoryName",
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_repositories\")\r\n  |> filter(fn: (r) => r[\"veeamVBRRepoName\"] =~ /${vbrrepositories:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRRepoCapacity\" or r[\"_field\"] == \"veeamVBRRepoFree\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      veeamVBRRepoName: r.veeamVBRRepoName,\r\n      _value: if r.veeamVBRRepoCapacity > 0 then \r\n                ((r.veeamVBRRepoCapacity - r.veeamVBRRepoFree) / r.veeamVBRRepoCapacity * 100.0)\r\n              else 0.0 \r\n  }))\r\n  |> filter(fn: (r) => r._value > 0)  \r\n  |> group(columns: [\"veeamVBRRepoName\", \"_field\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_repositories\")\r\n  |> filter(fn: (r) => r[\"veeamVBRRepoName\"] =~ /${vbrrepositories:regex}/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"veeamVBRRepoCapacity\" or r[\"_field\"] == \"veeamVBRRepoFree\" or r[\"_field\"] == \"veeamVBRRepoUsed\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({\r\n      _time: r._time,\r\n      veeamVBRRepoName: r.veeamVBRRepoName,\r\n      conditionMet: (r.veeamVBRRepoFree == 0.0 or r.veeamVBRRepoCapacity == 0.0) and r.veeamVBRRepoUsed > 0.0,\r\n      _value: r.veeamVBRRepoUsed // Assuming you need to maintain some value for context.\r\n  }))\r\n  |> filter(fn: (r) => r.conditionMet)\r\n  |> group(columns: [\"veeamVBRRepoName\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n",
          "refId": "B"
        }
      ],
      "title": "Backup Repository - Usage Capacity",
      "type": "bargauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "fixed"
          },
          "custom": {
            "align": "auto",
            "cellOptions": {
              "mode": "gradient",
              "type": "color-background"
            },
            "inspect": false
          },
          "mappings": [],
          "noValue": "N/A",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Name"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 242
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Description"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 241
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Type"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 157
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Per-VM"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 93
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Path"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 174
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Concurrent Tasks"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 134
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Capacity"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Used Space"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Free Space"
            },
            "properties": [
              {
                "id": "unit",
                "value": "decbytes"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 64,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "11.1.4",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "hide": false,
          "query": "  from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_repositories\")\r\n  |> last()\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"veeamVBRRepoName\"])\r\n\r\n\r\n",
          "refId": "A"
        }
      ],
      "title": "Backup Repositories",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamVBRRepoName"
            ],
            "mode": "columns"
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_start": true,
              "_stop": true,
              "_time": true,
              "_value": false,
              "veeamVBRRepoXFS": true
            },
            "indexByName": {
              "_measurement": 1,
              "_start": 18,
              "_stop": 19,
              "_time": 0,
              "veeamVBRMSDescription": 3,
              "veeamVBRRepoBucketFolder": 12,
              "veeamVBRRepoBucketImmutable": 13,
              "veeamVBRRepoBucketImmutableDays": 10,
              "veeamVBRRepoBucketName": 11,
              "veeamVBRRepoCapacity": 5,
              "veeamVBRRepoFree": 7,
              "veeamVBRRepoMaxtasks": 17,
              "veeamVBRRepoName": 2,
              "veeamVBRRepoPerVM": 4,
              "veeamVBRRepoRegion": 14,
              "veeamVBRRepoServicePoint": 15,
              "veeamVBRRepoUsed": 6,
              "veeamVBRRepoXFS": 16,
              "veeamVBRRepopath": 8,
              "veeamVBRRepotype": 9
            },
            "renameByName": {
              "_start": "",
              "_value": "Concurrent Tasks",
              "veeamVBRMSDescription": "Description",
              "veeamVBRMSName": "Name",
              "veeamVBRMStype": "Type",
              "veeamVBRProxyDescription": "Description",
              "veeamVBRProxyMode": "Mode",
              "veeamVBRProxyName": "Name",
              "veeamVBRProxytype": "Type",
              "veeamVBRRepoBucketFolder": "Folder",
              "veeamVBRRepoBucketImmutable": "Immutable",
              "veeamVBRRepoBucketImmutableDays": "Immutability",
              "veeamVBRRepoBucketName": "Bucket",
              "veeamVBRRepoCapacity": "Capacity",
              "veeamVBRRepoFree": "Free Space",
              "veeamVBRRepoMaxtasks": "Concurrent Tasks",
              "veeamVBRRepoName": "Name",
              "veeamVBRRepoPerVM": "Per-VM",
              "veeamVBRRepoRegion": "Region",
              "veeamVBRRepoServicePoint": "Service Point",
              "veeamVBRRepoUsed": "Used Space",
              "veeamVBRRepoXFS": "XFS",
              "veeamVBRRepopath": "Path",
              "veeamVBRRepotype": "Type"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 53
      },
      "id": 91,
      "panels": [],
      "title": "$vbrserver - v$vbrmajorversion | Restore Points",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${DS_INFLUXDB}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-blue",
            "mode": "thresholds"
          },
          "decimals": 0,
          "mappings": [],
          "noValue": "N/A",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "semi-dark-green",
                "value": 7
              },
              {
                "color": "dark-green",
                "value": 14
              },
              {
                "color": "#205519",
                "value": 30
              },
              {
                "color": "#113c0c",
                "value": 60
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 3,
        "x": 0,
        "y": 54
      },
      "id": 71,
      "maxPerRow": 8,
      "options": {
        "colorMode": "background",
        "graphMode": "none",
        "justifyMode": "center",
        "orientation": "horizontal",
        "percentChangeColorMode": "standard",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^Restore Points$/",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value",
        "wideLayout": true
      },
      "pluginVersion": "11.1.4",
      "repeat": "vbrprotected",
      "repeatDirection": "h",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${DS_INFLUXDB}"
          },
          "query": "  from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_backupobjects\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"restorePointsCount\")\r\n    |> filter(fn: (r) => r[\"veeamVBRBobjectName\"] =~ /${vbrprotected:regex}/)\r\n  |> group(columns: [\"veeamVBRBobjectName\"])\r\n  |> last()\r\n  |> yield(name: \"last\")\r\n",
          "refId": "A"
        }
      ],
      "title": "$vbrprotected",
      "transformations": [
        {
          "id": "labelsToFields",
          "options": {
            "keepLabels": [
              "veeamVBRRepoName",
              "veeamVBRBobjectName"
            ],
            "mode": "columns"
          }
        },
        {
          "id": "merge",
          "options": {}
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "_field": true,
              "_measurement": true,
              "_time": true,
              "_value": false,
              "veeamVBRBobjectObjectId": true,
              "veeamVBRBobjectPath": true,
              "veeamVBRBobjectPlatform": true,
              "veeamVBRBobjecttype": true,
              "veeamVBRBobjectviType": true,
              "veeamVBRRepoXFS": true
            },
            "indexByName": {
              "_field": 1,
              "_measurement": 2,
              "_time": 0,
              "_value": 9,
              "veeamVBRBobjectName": 5,
              "veeamVBRBobjectObjectId": 3,
              "veeamVBRBobjectPath": 6,
              "veeamVBRBobjectPlatform": 7,
              "veeamVBRBobjecttype": 8,
              "veeamVBRBobjectviType": 4
            },
            "renameByName": {
              "_measurement": "",
              "_value": "Restore Points",
              "veeamVBRBobjectName": "Workload Name",
              "veeamVBRBobjectObjectId": "",
              "veeamVBRBobjectPath": "Source",
              "veeamVBRBobjectPlatform": "Platform",
              "veeamVBRBobjecttype": "Type",
              "veeamVBRMSDescription": "Description",
              "veeamVBRMSName": "Name",
              "veeamVBRMStype": "Type",
              "veeamVBRProxyDescription": "Description",
              "veeamVBRProxyMode": "Mode",
              "veeamVBRProxyName": "Name",
              "veeamVBRProxytype": "Type",
              "veeamVBRRepoBucketFolder": "Folder",
              "veeamVBRRepoBucketImmutable": "Immutable",
              "veeamVBRRepoBucketName": "Bucket",
              "veeamVBRRepoPerVM": "Per-VM",
              "veeamVBRRepoRegion": "Region",
              "veeamVBRRepoServicePoint": "Service Point",
              "veeamVBRRepoXFS": "XFS",
              "veeamVBRRepopath": "Path",
              "veeamVBRRepotype": "Type"
            }
          }
        }
      ],
      "type": "stat"
    }
  ],
  "refresh": "",
  "revision": 1,
  "schemaVersion": 39,
  "tags": [
    "veeam",
    "backup & replication",
    "vbr"
  ],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_info\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] != \"\")\r\n  |> keep(columns: [\"veeamVBR\"])\r\n  |> distinct(column: \"veeamVBR\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Veeam Backup Server",
        "multi": true,
        "name": "vbrserver",
        "options": [],
        "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_info\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] != \"\")\r\n  |> keep(columns: [\"veeamVBR\"])\r\n  |> distinct(column: \"veeamVBR\")\r\n  |> group()",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRSessionJobName\"])\r\n  |> distinct(column: \"veeamVBRSessionJobName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Jobs",
        "multi": true,
        "name": "vbrjobs",
        "options": [],
        "query": {
          "0": "f",
          "1": "r",
          "2": "o",
          "3": "m",
          "4": "(",
          "5": "b",
          "6": "u",
          "7": "c",
          "8": "k",
          "9": "e",
          "10": "t",
          "11": ":",
          "12": " ",
          "13": "v",
          "14": ".",
          "15": "d",
          "16": "e",
          "17": "f",
          "18": "a",
          "19": "u",
          "20": "l",
          "21": "t",
          "22": "B",
          "23": "u",
          "24": "c",
          "25": "k",
          "26": "e",
          "27": "t",
          "28": ")",
          "29": "\r",
          "30": "\n",
          "31": " ",
          "32": " ",
          "33": "|",
          "34": ">",
          "35": " ",
          "36": "r",
          "37": "a",
          "38": "n",
          "39": "g",
          "40": "e",
          "41": "(",
          "42": "s",
          "43": "t",
          "44": "a",
          "45": "r",
          "46": "t",
          "47": ":",
          "48": " ",
          "49": "v",
          "50": ".",
          "51": "t",
          "52": "i",
          "53": "m",
          "54": "e",
          "55": "R",
          "56": "a",
          "57": "n",
          "58": "g",
          "59": "e",
          "60": "S",
          "61": "t",
          "62": "a",
          "63": "r",
          "64": "t",
          "65": ",",
          "66": " ",
          "67": "s",
          "68": "t",
          "69": "o",
          "70": "p",
          "71": ":",
          "72": " ",
          "73": "v",
          "74": ".",
          "75": "t",
          "76": "i",
          "77": "m",
          "78": "e",
          "79": "R",
          "80": "a",
          "81": "n",
          "82": "g",
          "83": "e",
          "84": "S",
          "85": "t",
          "86": "o",
          "87": "p",
          "88": ")",
          "89": "\r",
          "90": "\n",
          "91": " ",
          "92": " ",
          "93": "|",
          "94": ">",
          "95": " ",
          "96": "f",
          "97": "i",
          "98": "l",
          "99": "t",
          "100": "e",
          "101": "r",
          "102": "(",
          "103": "f",
          "104": "n",
          "105": ":",
          "106": " ",
          "107": "(",
          "108": "r",
          "109": ")",
          "110": " ",
          "111": "=",
          "112": ">",
          "113": " ",
          "114": "r",
          "115": "[",
          "116": "\"",
          "117": "_",
          "118": "m",
          "119": "e",
          "120": "a",
          "121": "s",
          "122": "u",
          "123": "r",
          "124": "e",
          "125": "m",
          "126": "e",
          "127": "n",
          "128": "t",
          "129": "\"",
          "130": "]",
          "131": " ",
          "132": "=",
          "133": "=",
          "134": " ",
          "135": "\"",
          "136": "v",
          "137": "e",
          "138": "e",
          "139": "a",
          "140": "m",
          "141": "_",
          "142": "v",
          "143": "b",
          "144": "r",
          "145": "_",
          "146": "s",
          "147": "e",
          "148": "s",
          "149": "s",
          "150": "i",
          "151": "o",
          "152": "n",
          "153": "s",
          "154": "\"",
          "155": ")",
          "156": "\r",
          "157": "\n",
          "158": " ",
          "159": " ",
          "160": "|",
          "161": ">",
          "162": " ",
          "163": "f",
          "164": "i",
          "165": "l",
          "166": "t",
          "167": "e",
          "168": "r",
          "169": "(",
          "170": "f",
          "171": "n",
          "172": ":",
          "173": " ",
          "174": "(",
          "175": "r",
          "176": ")",
          "177": " ",
          "178": "=",
          "179": ">",
          "180": " ",
          "181": "r",
          "182": "[",
          "183": "\"",
          "184": "v",
          "185": "e",
          "186": "e",
          "187": "a",
          "188": "m",
          "189": "V",
          "190": "B",
          "191": "R",
          "192": "S",
          "193": "e",
          "194": "s",
          "195": "s",
          "196": "i",
          "197": "o",
          "198": "n",
          "199": "J",
          "200": "o",
          "201": "b",
          "202": "N",
          "203": "a",
          "204": "m",
          "205": "e",
          "206": "\"",
          "207": "]",
          "208": " ",
          "209": "!",
          "210": "=",
          "211": " ",
          "212": "\"",
          "213": "\"",
          "214": ")",
          "215": "\r",
          "216": "\n",
          "217": " ",
          "218": " ",
          "219": "|",
          "220": ">",
          "221": " ",
          "222": "f",
          "223": "i",
          "224": "l",
          "225": "t",
          "226": "e",
          "227": "r",
          "228": "(",
          "229": "f",
          "230": "n",
          "231": ":",
          "232": " ",
          "233": "(",
          "234": "r",
          "235": ")",
          "236": " ",
          "237": "=",
          "238": ">",
          "239": " ",
          "240": "r",
          "241": "[",
          "242": "\"",
          "243": "v",
          "244": "e",
          "245": "e",
          "246": "a",
          "247": "m",
          "248": "V",
          "249": "B",
          "250": "R",
          "251": "\"",
          "252": "]",
          "253": " ",
          "254": "=",
          "255": "=",
          "256": " ",
          "257": "\"",
          "258": "$",
          "259": "{",
          "260": "v",
          "261": "b",
          "262": "r",
          "263": "s",
          "264": "e",
          "265": "r",
          "266": "v",
          "267": "e",
          "268": "r",
          "269": "}",
          "270": "\"",
          "271": ")",
          "272": "\r",
          "273": "\n",
          "274": " ",
          "275": " ",
          "276": "|",
          "277": ">",
          "278": " ",
          "279": "k",
          "280": "e",
          "281": "e",
          "282": "p",
          "283": "(",
          "284": "c",
          "285": "o",
          "286": "l",
          "287": "u",
          "288": "m",
          "289": "n",
          "290": "s",
          "291": ":",
          "292": " ",
          "293": "[",
          "294": "\"",
          "295": "v",
          "296": "e",
          "297": "e",
          "298": "a",
          "299": "m",
          "300": "V",
          "301": "B",
          "302": "R",
          "303": "S",
          "304": "e",
          "305": "s",
          "306": "s",
          "307": "i",
          "308": "o",
          "309": "n",
          "310": "J",
          "311": "o",
          "312": "b",
          "313": "N",
          "314": "a",
          "315": "m",
          "316": "e",
          "317": "\"",
          "318": "]",
          "319": ")",
          "320": "\r",
          "321": "\n",
          "322": " ",
          "323": " ",
          "324": "|",
          "325": ">",
          "326": " ",
          "327": "d",
          "328": "i",
          "329": "s",
          "330": "t",
          "331": "i",
          "332": "n",
          "333": "c",
          "334": "t",
          "335": "(",
          "336": "c",
          "337": "o",
          "338": "l",
          "339": "u",
          "340": "m",
          "341": "n",
          "342": ":",
          "343": " ",
          "344": "\"",
          "345": "v",
          "346": "e",
          "347": "e",
          "348": "a",
          "349": "m",
          "350": "V",
          "351": "B",
          "352": "R",
          "353": "S",
          "354": "e",
          "355": "s",
          "356": "s",
          "357": "i",
          "358": "o",
          "359": "n",
          "360": "J",
          "361": "o",
          "362": "b",
          "363": "N",
          "364": "a",
          "365": "m",
          "366": "e",
          "367": "\"",
          "368": ")",
          "369": "\r",
          "370": "\n",
          "371": " ",
          "372": " ",
          "373": "|",
          "374": ">",
          "375": " ",
          "376": "g",
          "377": "r",
          "378": "o",
          "379": "u",
          "380": "p",
          "381": "(",
          "382": ")",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_sessions\")\r\n  |> filter(fn: (r) => r[\"veeamVBRSessionJobName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRSessionJobName\"])\r\n  |> distinct(column: \"veeamVBRSessionJobName\")\r\n  |> group()"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_managedservers\")\r\n  |> filter(fn: (r) => r[\"veeamVBRMSName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRMSName\"])\r\n  |> distinct(column: \"veeamVBRMSName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Managed Servers",
        "multi": true,
        "name": "vbrmanaged",
        "options": [],
        "query": {
          "0": "f",
          "1": "r",
          "2": "o",
          "3": "m",
          "4": "(",
          "5": "b",
          "6": "u",
          "7": "c",
          "8": "k",
          "9": "e",
          "10": "t",
          "11": ":",
          "12": " ",
          "13": "v",
          "14": ".",
          "15": "d",
          "16": "e",
          "17": "f",
          "18": "a",
          "19": "u",
          "20": "l",
          "21": "t",
          "22": "B",
          "23": "u",
          "24": "c",
          "25": "k",
          "26": "e",
          "27": "t",
          "28": ")",
          "29": "\r",
          "30": "\n",
          "31": " ",
          "32": " ",
          "33": "|",
          "34": ">",
          "35": " ",
          "36": "r",
          "37": "a",
          "38": "n",
          "39": "g",
          "40": "e",
          "41": "(",
          "42": "s",
          "43": "t",
          "44": "a",
          "45": "r",
          "46": "t",
          "47": ":",
          "48": " ",
          "49": "v",
          "50": ".",
          "51": "t",
          "52": "i",
          "53": "m",
          "54": "e",
          "55": "R",
          "56": "a",
          "57": "n",
          "58": "g",
          "59": "e",
          "60": "S",
          "61": "t",
          "62": "a",
          "63": "r",
          "64": "t",
          "65": ",",
          "66": " ",
          "67": "s",
          "68": "t",
          "69": "o",
          "70": "p",
          "71": ":",
          "72": " ",
          "73": "v",
          "74": ".",
          "75": "t",
          "76": "i",
          "77": "m",
          "78": "e",
          "79": "R",
          "80": "a",
          "81": "n",
          "82": "g",
          "83": "e",
          "84": "S",
          "85": "t",
          "86": "o",
          "87": "p",
          "88": ")",
          "89": "\r",
          "90": "\n",
          "91": " ",
          "92": " ",
          "93": "|",
          "94": ">",
          "95": " ",
          "96": "f",
          "97": "i",
          "98": "l",
          "99": "t",
          "100": "e",
          "101": "r",
          "102": "(",
          "103": "f",
          "104": "n",
          "105": ":",
          "106": " ",
          "107": "(",
          "108": "r",
          "109": ")",
          "110": " ",
          "111": "=",
          "112": ">",
          "113": " ",
          "114": "r",
          "115": "[",
          "116": "\"",
          "117": "_",
          "118": "m",
          "119": "e",
          "120": "a",
          "121": "s",
          "122": "u",
          "123": "r",
          "124": "e",
          "125": "m",
          "126": "e",
          "127": "n",
          "128": "t",
          "129": "\"",
          "130": "]",
          "131": " ",
          "132": "=",
          "133": "=",
          "134": " ",
          "135": "\"",
          "136": "v",
          "137": "e",
          "138": "e",
          "139": "a",
          "140": "m",
          "141": "_",
          "142": "v",
          "143": "b",
          "144": "r",
          "145": "_",
          "146": "m",
          "147": "a",
          "148": "n",
          "149": "a",
          "150": "g",
          "151": "e",
          "152": "d",
          "153": "s",
          "154": "e",
          "155": "r",
          "156": "v",
          "157": "e",
          "158": "r",
          "159": "s",
          "160": "\"",
          "161": ")",
          "162": "\r",
          "163": "\n",
          "164": " ",
          "165": " ",
          "166": "|",
          "167": ">",
          "168": " ",
          "169": "f",
          "170": "i",
          "171": "l",
          "172": "t",
          "173": "e",
          "174": "r",
          "175": "(",
          "176": "f",
          "177": "n",
          "178": ":",
          "179": " ",
          "180": "(",
          "181": "r",
          "182": ")",
          "183": " ",
          "184": "=",
          "185": ">",
          "186": " ",
          "187": "r",
          "188": "[",
          "189": "\"",
          "190": "v",
          "191": "e",
          "192": "e",
          "193": "a",
          "194": "m",
          "195": "V",
          "196": "B",
          "197": "R",
          "198": "M",
          "199": "S",
          "200": "N",
          "201": "a",
          "202": "m",
          "203": "e",
          "204": "\"",
          "205": "]",
          "206": " ",
          "207": "!",
          "208": "=",
          "209": " ",
          "210": "\"",
          "211": "\"",
          "212": ")",
          "213": "\r",
          "214": "\n",
          "215": " ",
          "216": " ",
          "217": "|",
          "218": ">",
          "219": " ",
          "220": "f",
          "221": "i",
          "222": "l",
          "223": "t",
          "224": "e",
          "225": "r",
          "226": "(",
          "227": "f",
          "228": "n",
          "229": ":",
          "230": " ",
          "231": "(",
          "232": "r",
          "233": ")",
          "234": " ",
          "235": "=",
          "236": ">",
          "237": " ",
          "238": "r",
          "239": "[",
          "240": "\"",
          "241": "v",
          "242": "e",
          "243": "e",
          "244": "a",
          "245": "m",
          "246": "V",
          "247": "B",
          "248": "R",
          "249": "\"",
          "250": "]",
          "251": " ",
          "252": "=",
          "253": "=",
          "254": " ",
          "255": "\"",
          "256": "$",
          "257": "{",
          "258": "v",
          "259": "b",
          "260": "r",
          "261": "s",
          "262": "e",
          "263": "r",
          "264": "v",
          "265": "e",
          "266": "r",
          "267": "}",
          "268": "\"",
          "269": ")",
          "270": "\r",
          "271": "\n",
          "272": " ",
          "273": " ",
          "274": "|",
          "275": ">",
          "276": " ",
          "277": "k",
          "278": "e",
          "279": "e",
          "280": "p",
          "281": "(",
          "282": "c",
          "283": "o",
          "284": "l",
          "285": "u",
          "286": "m",
          "287": "n",
          "288": "s",
          "289": ":",
          "290": " ",
          "291": "[",
          "292": "\"",
          "293": "v",
          "294": "e",
          "295": "e",
          "296": "a",
          "297": "m",
          "298": "V",
          "299": "B",
          "300": "R",
          "301": "M",
          "302": "S",
          "303": "N",
          "304": "a",
          "305": "m",
          "306": "e",
          "307": "\"",
          "308": "]",
          "309": ")",
          "310": "\r",
          "311": "\n",
          "312": " ",
          "313": " ",
          "314": "|",
          "315": ">",
          "316": " ",
          "317": "d",
          "318": "i",
          "319": "s",
          "320": "t",
          "321": "i",
          "322": "n",
          "323": "c",
          "324": "t",
          "325": "(",
          "326": "c",
          "327": "o",
          "328": "l",
          "329": "u",
          "330": "m",
          "331": "n",
          "332": ":",
          "333": " ",
          "334": "\"",
          "335": "v",
          "336": "e",
          "337": "e",
          "338": "a",
          "339": "m",
          "340": "V",
          "341": "B",
          "342": "R",
          "343": "M",
          "344": "S",
          "345": "N",
          "346": "a",
          "347": "m",
          "348": "e",
          "349": "\"",
          "350": ")",
          "351": "\r",
          "352": "\n",
          "353": " ",
          "354": " ",
          "355": "|",
          "356": ">",
          "357": " ",
          "358": "g",
          "359": "r",
          "360": "o",
          "361": "u",
          "362": "p",
          "363": "(",
          "364": ")",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_managedservers\")\r\n  |> filter(fn: (r) => r[\"veeamVBRMSName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRMSName\"])\r\n  |> distinct(column: \"veeamVBRMSName\")\r\n  |> group()"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_repositories\")\r\n  |> filter(fn: (r) => r[\"veeamVBRRepoName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRRepoName\"])\r\n  |> distinct(column: \"veeamVBRRepoName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Backup Repositories",
        "multi": true,
        "name": "vbrrepositories",
        "options": [],
        "query": {
          "0": "f",
          "1": "r",
          "2": "o",
          "3": "m",
          "4": "(",
          "5": "b",
          "6": "u",
          "7": "c",
          "8": "k",
          "9": "e",
          "10": "t",
          "11": ":",
          "12": " ",
          "13": "v",
          "14": ".",
          "15": "d",
          "16": "e",
          "17": "f",
          "18": "a",
          "19": "u",
          "20": "l",
          "21": "t",
          "22": "B",
          "23": "u",
          "24": "c",
          "25": "k",
          "26": "e",
          "27": "t",
          "28": ")",
          "29": "\r",
          "30": "\n",
          "31": " ",
          "32": " ",
          "33": "|",
          "34": ">",
          "35": " ",
          "36": "r",
          "37": "a",
          "38": "n",
          "39": "g",
          "40": "e",
          "41": "(",
          "42": "s",
          "43": "t",
          "44": "a",
          "45": "r",
          "46": "t",
          "47": ":",
          "48": " ",
          "49": "v",
          "50": ".",
          "51": "t",
          "52": "i",
          "53": "m",
          "54": "e",
          "55": "R",
          "56": "a",
          "57": "n",
          "58": "g",
          "59": "e",
          "60": "S",
          "61": "t",
          "62": "a",
          "63": "r",
          "64": "t",
          "65": ",",
          "66": " ",
          "67": "s",
          "68": "t",
          "69": "o",
          "70": "p",
          "71": ":",
          "72": " ",
          "73": "v",
          "74": ".",
          "75": "t",
          "76": "i",
          "77": "m",
          "78": "e",
          "79": "R",
          "80": "a",
          "81": "n",
          "82": "g",
          "83": "e",
          "84": "S",
          "85": "t",
          "86": "o",
          "87": "p",
          "88": ")",
          "89": "\r",
          "90": "\n",
          "91": " ",
          "92": " ",
          "93": "|",
          "94": ">",
          "95": " ",
          "96": "f",
          "97": "i",
          "98": "l",
          "99": "t",
          "100": "e",
          "101": "r",
          "102": "(",
          "103": "f",
          "104": "n",
          "105": ":",
          "106": " ",
          "107": "(",
          "108": "r",
          "109": ")",
          "110": " ",
          "111": "=",
          "112": ">",
          "113": " ",
          "114": "r",
          "115": "[",
          "116": "\"",
          "117": "_",
          "118": "m",
          "119": "e",
          "120": "a",
          "121": "s",
          "122": "u",
          "123": "r",
          "124": "e",
          "125": "m",
          "126": "e",
          "127": "n",
          "128": "t",
          "129": "\"",
          "130": "]",
          "131": " ",
          "132": "=",
          "133": "=",
          "134": " ",
          "135": "\"",
          "136": "v",
          "137": "e",
          "138": "e",
          "139": "a",
          "140": "m",
          "141": "_",
          "142": "v",
          "143": "b",
          "144": "r",
          "145": "_",
          "146": "r",
          "147": "e",
          "148": "p",
          "149": "o",
          "150": "s",
          "151": "i",
          "152": "t",
          "153": "o",
          "154": "r",
          "155": "i",
          "156": "e",
          "157": "s",
          "158": "\"",
          "159": ")",
          "160": "\r",
          "161": "\n",
          "162": " ",
          "163": " ",
          "164": "|",
          "165": ">",
          "166": " ",
          "167": "f",
          "168": "i",
          "169": "l",
          "170": "t",
          "171": "e",
          "172": "r",
          "173": "(",
          "174": "f",
          "175": "n",
          "176": ":",
          "177": " ",
          "178": "(",
          "179": "r",
          "180": ")",
          "181": " ",
          "182": "=",
          "183": ">",
          "184": " ",
          "185": "r",
          "186": "[",
          "187": "\"",
          "188": "v",
          "189": "e",
          "190": "e",
          "191": "a",
          "192": "m",
          "193": "V",
          "194": "B",
          "195": "R",
          "196": "R",
          "197": "e",
          "198": "p",
          "199": "o",
          "200": "N",
          "201": "a",
          "202": "m",
          "203": "e",
          "204": "\"",
          "205": "]",
          "206": " ",
          "207": "!",
          "208": "=",
          "209": " ",
          "210": "\"",
          "211": "\"",
          "212": ")",
          "213": "\r",
          "214": "\n",
          "215": " ",
          "216": " ",
          "217": "|",
          "218": ">",
          "219": " ",
          "220": "f",
          "221": "i",
          "222": "l",
          "223": "t",
          "224": "e",
          "225": "r",
          "226": "(",
          "227": "f",
          "228": "n",
          "229": ":",
          "230": " ",
          "231": "(",
          "232": "r",
          "233": ")",
          "234": " ",
          "235": "=",
          "236": ">",
          "237": " ",
          "238": "r",
          "239": "[",
          "240": "\"",
          "241": "v",
          "242": "e",
          "243": "e",
          "244": "a",
          "245": "m",
          "246": "V",
          "247": "B",
          "248": "R",
          "249": "\"",
          "250": "]",
          "251": " ",
          "252": "=",
          "253": "=",
          "254": " ",
          "255": "\"",
          "256": "$",
          "257": "{",
          "258": "v",
          "259": "b",
          "260": "r",
          "261": "s",
          "262": "e",
          "263": "r",
          "264": "v",
          "265": "e",
          "266": "r",
          "267": "}",
          "268": "\"",
          "269": ")",
          "270": "\r",
          "271": "\n",
          "272": " ",
          "273": " ",
          "274": "|",
          "275": ">",
          "276": " ",
          "277": "k",
          "278": "e",
          "279": "e",
          "280": "p",
          "281": "(",
          "282": "c",
          "283": "o",
          "284": "l",
          "285": "u",
          "286": "m",
          "287": "n",
          "288": "s",
          "289": ":",
          "290": " ",
          "291": "[",
          "292": "\"",
          "293": "v",
          "294": "e",
          "295": "e",
          "296": "a",
          "297": "m",
          "298": "V",
          "299": "B",
          "300": "R",
          "301": "R",
          "302": "e",
          "303": "p",
          "304": "o",
          "305": "N",
          "306": "a",
          "307": "m",
          "308": "e",
          "309": "\"",
          "310": "]",
          "311": ")",
          "312": "\r",
          "313": "\n",
          "314": " ",
          "315": " ",
          "316": "|",
          "317": ">",
          "318": " ",
          "319": "d",
          "320": "i",
          "321": "s",
          "322": "t",
          "323": "i",
          "324": "n",
          "325": "c",
          "326": "t",
          "327": "(",
          "328": "c",
          "329": "o",
          "330": "l",
          "331": "u",
          "332": "m",
          "333": "n",
          "334": ":",
          "335": " ",
          "336": "\"",
          "337": "v",
          "338": "e",
          "339": "e",
          "340": "a",
          "341": "m",
          "342": "V",
          "343": "B",
          "344": "R",
          "345": "R",
          "346": "e",
          "347": "p",
          "348": "o",
          "349": "N",
          "350": "a",
          "351": "m",
          "352": "e",
          "353": "\"",
          "354": ")",
          "355": "\r",
          "356": "\n",
          "357": " ",
          "358": " ",
          "359": "|",
          "360": ">",
          "361": " ",
          "362": "g",
          "363": "r",
          "364": "o",
          "365": "u",
          "366": "p",
          "367": "(",
          "368": ")",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_repositories\")\r\n  |> filter(fn: (r) => r[\"veeamVBRRepoName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRRepoName\"])\r\n  |> distinct(column: \"veeamVBRRepoName\")\r\n  |> group()"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_proxies\")\r\n  |> filter(fn: (r) => r[\"veeamVBRProxyName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRProxyName\"])\r\n  |> distinct(column: \"veeamVBRProxyName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Backup Proxies",
        "multi": true,
        "name": "vbrproxies",
        "options": [],
        "query": {
          "0": "f",
          "1": "r",
          "2": "o",
          "3": "m",
          "4": "(",
          "5": "b",
          "6": "u",
          "7": "c",
          "8": "k",
          "9": "e",
          "10": "t",
          "11": ":",
          "12": " ",
          "13": "v",
          "14": ".",
          "15": "d",
          "16": "e",
          "17": "f",
          "18": "a",
          "19": "u",
          "20": "l",
          "21": "t",
          "22": "B",
          "23": "u",
          "24": "c",
          "25": "k",
          "26": "e",
          "27": "t",
          "28": ")",
          "29": "\r",
          "30": "\n",
          "31": " ",
          "32": " ",
          "33": "|",
          "34": ">",
          "35": " ",
          "36": "r",
          "37": "a",
          "38": "n",
          "39": "g",
          "40": "e",
          "41": "(",
          "42": "s",
          "43": "t",
          "44": "a",
          "45": "r",
          "46": "t",
          "47": ":",
          "48": " ",
          "49": "v",
          "50": ".",
          "51": "t",
          "52": "i",
          "53": "m",
          "54": "e",
          "55": "R",
          "56": "a",
          "57": "n",
          "58": "g",
          "59": "e",
          "60": "S",
          "61": "t",
          "62": "a",
          "63": "r",
          "64": "t",
          "65": ",",
          "66": " ",
          "67": "s",
          "68": "t",
          "69": "o",
          "70": "p",
          "71": ":",
          "72": " ",
          "73": "v",
          "74": ".",
          "75": "t",
          "76": "i",
          "77": "m",
          "78": "e",
          "79": "R",
          "80": "a",
          "81": "n",
          "82": "g",
          "83": "e",
          "84": "S",
          "85": "t",
          "86": "o",
          "87": "p",
          "88": ")",
          "89": "\r",
          "90": "\n",
          "91": " ",
          "92": " ",
          "93": "|",
          "94": ">",
          "95": " ",
          "96": "f",
          "97": "i",
          "98": "l",
          "99": "t",
          "100": "e",
          "101": "r",
          "102": "(",
          "103": "f",
          "104": "n",
          "105": ":",
          "106": " ",
          "107": "(",
          "108": "r",
          "109": ")",
          "110": " ",
          "111": "=",
          "112": ">",
          "113": " ",
          "114": "r",
          "115": "[",
          "116": "\"",
          "117": "_",
          "118": "m",
          "119": "e",
          "120": "a",
          "121": "s",
          "122": "u",
          "123": "r",
          "124": "e",
          "125": "m",
          "126": "e",
          "127": "n",
          "128": "t",
          "129": "\"",
          "130": "]",
          "131": " ",
          "132": "=",
          "133": "=",
          "134": " ",
          "135": "\"",
          "136": "v",
          "137": "e",
          "138": "e",
          "139": "a",
          "140": "m",
          "141": "_",
          "142": "v",
          "143": "b",
          "144": "r",
          "145": "_",
          "146": "p",
          "147": "r",
          "148": "o",
          "149": "x",
          "150": "i",
          "151": "e",
          "152": "s",
          "153": "\"",
          "154": ")",
          "155": "\r",
          "156": "\n",
          "157": " ",
          "158": " ",
          "159": "|",
          "160": ">",
          "161": " ",
          "162": "f",
          "163": "i",
          "164": "l",
          "165": "t",
          "166": "e",
          "167": "r",
          "168": "(",
          "169": "f",
          "170": "n",
          "171": ":",
          "172": " ",
          "173": "(",
          "174": "r",
          "175": ")",
          "176": " ",
          "177": "=",
          "178": ">",
          "179": " ",
          "180": "r",
          "181": "[",
          "182": "\"",
          "183": "v",
          "184": "e",
          "185": "e",
          "186": "a",
          "187": "m",
          "188": "V",
          "189": "B",
          "190": "R",
          "191": "P",
          "192": "r",
          "193": "o",
          "194": "x",
          "195": "y",
          "196": "N",
          "197": "a",
          "198": "m",
          "199": "e",
          "200": "\"",
          "201": "]",
          "202": " ",
          "203": "!",
          "204": "=",
          "205": " ",
          "206": "\"",
          "207": "\"",
          "208": ")",
          "209": "\r",
          "210": "\n",
          "211": " ",
          "212": " ",
          "213": "|",
          "214": ">",
          "215": " ",
          "216": "f",
          "217": "i",
          "218": "l",
          "219": "t",
          "220": "e",
          "221": "r",
          "222": "(",
          "223": "f",
          "224": "n",
          "225": ":",
          "226": " ",
          "227": "(",
          "228": "r",
          "229": ")",
          "230": " ",
          "231": "=",
          "232": ">",
          "233": " ",
          "234": "r",
          "235": "[",
          "236": "\"",
          "237": "v",
          "238": "e",
          "239": "e",
          "240": "a",
          "241": "m",
          "242": "V",
          "243": "B",
          "244": "R",
          "245": "\"",
          "246": "]",
          "247": " ",
          "248": "=",
          "249": "=",
          "250": " ",
          "251": "\"",
          "252": "$",
          "253": "{",
          "254": "v",
          "255": "b",
          "256": "r",
          "257": "s",
          "258": "e",
          "259": "r",
          "260": "v",
          "261": "e",
          "262": "r",
          "263": "}",
          "264": "\"",
          "265": ")",
          "266": "\r",
          "267": "\n",
          "268": " ",
          "269": " ",
          "270": "|",
          "271": ">",
          "272": " ",
          "273": "k",
          "274": "e",
          "275": "e",
          "276": "p",
          "277": "(",
          "278": "c",
          "279": "o",
          "280": "l",
          "281": "u",
          "282": "m",
          "283": "n",
          "284": "s",
          "285": ":",
          "286": " ",
          "287": "[",
          "288": "\"",
          "289": "v",
          "290": "e",
          "291": "e",
          "292": "a",
          "293": "m",
          "294": "V",
          "295": "B",
          "296": "R",
          "297": "P",
          "298": "r",
          "299": "o",
          "300": "x",
          "301": "y",
          "302": "N",
          "303": "a",
          "304": "m",
          "305": "e",
          "306": "\"",
          "307": "]",
          "308": ")",
          "309": "\r",
          "310": "\n",
          "311": " ",
          "312": " ",
          "313": "|",
          "314": ">",
          "315": " ",
          "316": "d",
          "317": "i",
          "318": "s",
          "319": "t",
          "320": "i",
          "321": "n",
          "322": "c",
          "323": "t",
          "324": "(",
          "325": "c",
          "326": "o",
          "327": "l",
          "328": "u",
          "329": "m",
          "330": "n",
          "331": ":",
          "332": " ",
          "333": "\"",
          "334": "v",
          "335": "e",
          "336": "e",
          "337": "a",
          "338": "m",
          "339": "V",
          "340": "B",
          "341": "R",
          "342": "P",
          "343": "r",
          "344": "o",
          "345": "x",
          "346": "y",
          "347": "N",
          "348": "a",
          "349": "m",
          "350": "e",
          "351": "\"",
          "352": ")",
          "353": "\r",
          "354": "\n",
          "355": " ",
          "356": " ",
          "357": "|",
          "358": ">",
          "359": " ",
          "360": "g",
          "361": "r",
          "362": "o",
          "363": "u",
          "364": "p",
          "365": "(",
          "366": ")",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_proxies\")\r\n  |> filter(fn: (r) => r[\"veeamVBRProxyName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRProxyName\"])\r\n  |> distinct(column: \"veeamVBRProxyName\")\r\n  |> group()"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_backupobjects\")\r\n  |> filter(fn: (r) => r[\"veeamVBRBobjectName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRBobjectName\"])\r\n  |> distinct(column: \"veeamVBRBobjectName\")\r\n  |> group()",
        "hide": 0,
        "includeAll": true,
        "label": "Protected Workload",
        "multi": true,
        "name": "vbrprotected",
        "options": [],
        "query": {
          "0": "f",
          "1": "r",
          "2": "o",
          "3": "m",
          "4": "(",
          "5": "b",
          "6": "u",
          "7": "c",
          "8": "k",
          "9": "e",
          "10": "t",
          "11": ":",
          "12": " ",
          "13": "v",
          "14": ".",
          "15": "d",
          "16": "e",
          "17": "f",
          "18": "a",
          "19": "u",
          "20": "l",
          "21": "t",
          "22": "B",
          "23": "u",
          "24": "c",
          "25": "k",
          "26": "e",
          "27": "t",
          "28": ")",
          "29": "\r",
          "30": "\n",
          "31": " ",
          "32": " ",
          "33": "|",
          "34": ">",
          "35": " ",
          "36": "r",
          "37": "a",
          "38": "n",
          "39": "g",
          "40": "e",
          "41": "(",
          "42": "s",
          "43": "t",
          "44": "a",
          "45": "r",
          "46": "t",
          "47": ":",
          "48": " ",
          "49": "v",
          "50": ".",
          "51": "t",
          "52": "i",
          "53": "m",
          "54": "e",
          "55": "R",
          "56": "a",
          "57": "n",
          "58": "g",
          "59": "e",
          "60": "S",
          "61": "t",
          "62": "a",
          "63": "r",
          "64": "t",
          "65": ",",
          "66": " ",
          "67": "s",
          "68": "t",
          "69": "o",
          "70": "p",
          "71": ":",
          "72": " ",
          "73": "v",
          "74": ".",
          "75": "t",
          "76": "i",
          "77": "m",
          "78": "e",
          "79": "R",
          "80": "a",
          "81": "n",
          "82": "g",
          "83": "e",
          "84": "S",
          "85": "t",
          "86": "o",
          "87": "p",
          "88": ")",
          "89": "\r",
          "90": "\n",
          "91": " ",
          "92": " ",
          "93": "|",
          "94": ">",
          "95": " ",
          "96": "f",
          "97": "i",
          "98": "l",
          "99": "t",
          "100": "e",
          "101": "r",
          "102": "(",
          "103": "f",
          "104": "n",
          "105": ":",
          "106": " ",
          "107": "(",
          "108": "r",
          "109": ")",
          "110": " ",
          "111": "=",
          "112": ">",
          "113": " ",
          "114": "r",
          "115": "[",
          "116": "\"",
          "117": "_",
          "118": "m",
          "119": "e",
          "120": "a",
          "121": "s",
          "122": "u",
          "123": "r",
          "124": "e",
          "125": "m",
          "126": "e",
          "127": "n",
          "128": "t",
          "129": "\"",
          "130": "]",
          "131": " ",
          "132": "=",
          "133": "=",
          "134": " ",
          "135": "\"",
          "136": "v",
          "137": "e",
          "138": "e",
          "139": "a",
          "140": "m",
          "141": "_",
          "142": "v",
          "143": "b",
          "144": "r",
          "145": "_",
          "146": "b",
          "147": "a",
          "148": "c",
          "149": "k",
          "150": "u",
          "151": "p",
          "152": "o",
          "153": "b",
          "154": "j",
          "155": "e",
          "156": "c",
          "157": "t",
          "158": "s",
          "159": "\"",
          "160": ")",
          "161": "\r",
          "162": "\n",
          "163": " ",
          "164": " ",
          "165": "|",
          "166": ">",
          "167": " ",
          "168": "f",
          "169": "i",
          "170": "l",
          "171": "t",
          "172": "e",
          "173": "r",
          "174": "(",
          "175": "f",
          "176": "n",
          "177": ":",
          "178": " ",
          "179": "(",
          "180": "r",
          "181": ")",
          "182": " ",
          "183": "=",
          "184": ">",
          "185": " ",
          "186": "r",
          "187": "[",
          "188": "\"",
          "189": "v",
          "190": "e",
          "191": "e",
          "192": "a",
          "193": "m",
          "194": "V",
          "195": "B",
          "196": "R",
          "197": "B",
          "198": "o",
          "199": "b",
          "200": "j",
          "201": "e",
          "202": "c",
          "203": "t",
          "204": "N",
          "205": "a",
          "206": "m",
          "207": "e",
          "208": "\"",
          "209": "]",
          "210": " ",
          "211": "!",
          "212": "=",
          "213": " ",
          "214": "\"",
          "215": "\"",
          "216": ")",
          "217": "\r",
          "218": "\n",
          "219": " ",
          "220": " ",
          "221": "|",
          "222": ">",
          "223": " ",
          "224": "f",
          "225": "i",
          "226": "l",
          "227": "t",
          "228": "e",
          "229": "r",
          "230": "(",
          "231": "f",
          "232": "n",
          "233": ":",
          "234": " ",
          "235": "(",
          "236": "r",
          "237": ")",
          "238": " ",
          "239": "=",
          "240": ">",
          "241": " ",
          "242": "r",
          "243": "[",
          "244": "\"",
          "245": "v",
          "246": "e",
          "247": "e",
          "248": "a",
          "249": "m",
          "250": "V",
          "251": "B",
          "252": "R",
          "253": "\"",
          "254": "]",
          "255": " ",
          "256": "=",
          "257": "=",
          "258": " ",
          "259": "\"",
          "260": "$",
          "261": "{",
          "262": "v",
          "263": "b",
          "264": "r",
          "265": "s",
          "266": "e",
          "267": "r",
          "268": "v",
          "269": "e",
          "270": "r",
          "271": "}",
          "272": "\"",
          "273": ")",
          "274": "\r",
          "275": "\n",
          "276": " ",
          "277": " ",
          "278": "|",
          "279": ">",
          "280": " ",
          "281": "k",
          "282": "e",
          "283": "e",
          "284": "p",
          "285": "(",
          "286": "c",
          "287": "o",
          "288": "l",
          "289": "u",
          "290": "m",
          "291": "n",
          "292": "s",
          "293": ":",
          "294": " ",
          "295": "[",
          "296": "\"",
          "297": "v",
          "298": "e",
          "299": "e",
          "300": "a",
          "301": "m",
          "302": "V",
          "303": "B",
          "304": "R",
          "305": "B",
          "306": "o",
          "307": "b",
          "308": "j",
          "309": "e",
          "310": "c",
          "311": "t",
          "312": "N",
          "313": "a",
          "314": "m",
          "315": "e",
          "316": "\"",
          "317": "]",
          "318": ")",
          "319": "\r",
          "320": "\n",
          "321": " ",
          "322": " ",
          "323": "|",
          "324": ">",
          "325": " ",
          "326": "d",
          "327": "i",
          "328": "s",
          "329": "t",
          "330": "i",
          "331": "n",
          "332": "c",
          "333": "t",
          "334": "(",
          "335": "c",
          "336": "o",
          "337": "l",
          "338": "u",
          "339": "m",
          "340": "n",
          "341": ":",
          "342": " ",
          "343": "\"",
          "344": "v",
          "345": "e",
          "346": "e",
          "347": "a",
          "348": "m",
          "349": "V",
          "350": "B",
          "351": "R",
          "352": "B",
          "353": "o",
          "354": "b",
          "355": "j",
          "356": "e",
          "357": "c",
          "358": "t",
          "359": "N",
          "360": "a",
          "361": "m",
          "362": "e",
          "363": "\"",
          "364": ")",
          "365": "\r",
          "366": "\n",
          "367": " ",
          "368": " ",
          "369": "|",
          "370": ">",
          "371": " ",
          "372": "g",
          "373": "r",
          "374": "o",
          "375": "u",
          "376": "p",
          "377": "(",
          "378": ")",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_backupobjects\")\r\n  |> filter(fn: (r) => r[\"veeamVBRBobjectName\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRBobjectName\"])\r\n  |> distinct(column: \"veeamVBRBobjectName\")\r\n  |> group()"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "influxdb",
          "uid": "${DS_INFLUXDB}"
        },
        "definition": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_info\")\r\n  |> filter(fn: (r) => r[\"veeamVBRVersion\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRVersion\"])\r\n  |> distinct(column: \"veeamVBRVersion\")\r\n  |> group()",
        "hide": 2,
        "includeAll": false,
        "label": "VBR Major Version",
        "multi": false,
        "name": "vbrmajorversion",
        "options": [],
        "query": {
          "0": "f",
          "1": "r",
          "2": "o",
          "3": "m",
          "4": "(",
          "5": "b",
          "6": "u",
          "7": "c",
          "8": "k",
          "9": "e",
          "10": "t",
          "11": ":",
          "12": " ",
          "13": "v",
          "14": ".",
          "15": "d",
          "16": "e",
          "17": "f",
          "18": "a",
          "19": "u",
          "20": "l",
          "21": "t",
          "22": "B",
          "23": "u",
          "24": "c",
          "25": "k",
          "26": "e",
          "27": "t",
          "28": ")",
          "29": "\r",
          "30": "\n",
          "31": " ",
          "32": " ",
          "33": "|",
          "34": ">",
          "35": " ",
          "36": "r",
          "37": "a",
          "38": "n",
          "39": "g",
          "40": "e",
          "41": "(",
          "42": "s",
          "43": "t",
          "44": "a",
          "45": "r",
          "46": "t",
          "47": ":",
          "48": " ",
          "49": "v",
          "50": ".",
          "51": "t",
          "52": "i",
          "53": "m",
          "54": "e",
          "55": "R",
          "56": "a",
          "57": "n",
          "58": "g",
          "59": "e",
          "60": "S",
          "61": "t",
          "62": "a",
          "63": "r",
          "64": "t",
          "65": ",",
          "66": " ",
          "67": "s",
          "68": "t",
          "69": "o",
          "70": "p",
          "71": ":",
          "72": " ",
          "73": "v",
          "74": ".",
          "75": "t",
          "76": "i",
          "77": "m",
          "78": "e",
          "79": "R",
          "80": "a",
          "81": "n",
          "82": "g",
          "83": "e",
          "84": "S",
          "85": "t",
          "86": "o",
          "87": "p",
          "88": ")",
          "89": "\r",
          "90": "\n",
          "91": " ",
          "92": " ",
          "93": "|",
          "94": ">",
          "95": " ",
          "96": "f",
          "97": "i",
          "98": "l",
          "99": "t",
          "100": "e",
          "101": "r",
          "102": "(",
          "103": "f",
          "104": "n",
          "105": ":",
          "106": " ",
          "107": "(",
          "108": "r",
          "109": ")",
          "110": " ",
          "111": "=",
          "112": ">",
          "113": " ",
          "114": "r",
          "115": "[",
          "116": "\"",
          "117": "_",
          "118": "m",
          "119": "e",
          "120": "a",
          "121": "s",
          "122": "u",
          "123": "r",
          "124": "e",
          "125": "m",
          "126": "e",
          "127": "n",
          "128": "t",
          "129": "\"",
          "130": "]",
          "131": " ",
          "132": "=",
          "133": "=",
          "134": " ",
          "135": "\"",
          "136": "v",
          "137": "e",
          "138": "e",
          "139": "a",
          "140": "m",
          "141": "_",
          "142": "v",
          "143": "b",
          "144": "r",
          "145": "_",
          "146": "i",
          "147": "n",
          "148": "f",
          "149": "o",
          "150": "\"",
          "151": ")",
          "152": "\r",
          "153": "\n",
          "154": " ",
          "155": " ",
          "156": "|",
          "157": ">",
          "158": " ",
          "159": "f",
          "160": "i",
          "161": "l",
          "162": "t",
          "163": "e",
          "164": "r",
          "165": "(",
          "166": "f",
          "167": "n",
          "168": ":",
          "169": " ",
          "170": "(",
          "171": "r",
          "172": ")",
          "173": " ",
          "174": "=",
          "175": ">",
          "176": " ",
          "177": "r",
          "178": "[",
          "179": "\"",
          "180": "v",
          "181": "e",
          "182": "e",
          "183": "a",
          "184": "m",
          "185": "V",
          "186": "B",
          "187": "R",
          "188": "V",
          "189": "e",
          "190": "r",
          "191": "s",
          "192": "i",
          "193": "o",
          "194": "n",
          "195": "\"",
          "196": "]",
          "197": " ",
          "198": "!",
          "199": "=",
          "200": " ",
          "201": "\"",
          "202": "\"",
          "203": ")",
          "204": "\r",
          "205": "\n",
          "206": " ",
          "207": " ",
          "208": "|",
          "209": ">",
          "210": " ",
          "211": "f",
          "212": "i",
          "213": "l",
          "214": "t",
          "215": "e",
          "216": "r",
          "217": "(",
          "218": "f",
          "219": "n",
          "220": ":",
          "221": " ",
          "222": "(",
          "223": "r",
          "224": ")",
          "225": " ",
          "226": "=",
          "227": ">",
          "228": " ",
          "229": "r",
          "230": "[",
          "231": "\"",
          "232": "v",
          "233": "e",
          "234": "e",
          "235": "a",
          "236": "m",
          "237": "V",
          "238": "B",
          "239": "R",
          "240": "\"",
          "241": "]",
          "242": " ",
          "243": "=",
          "244": "=",
          "245": " ",
          "246": "\"",
          "247": "$",
          "248": "{",
          "249": "v",
          "250": "b",
          "251": "r",
          "252": "s",
          "253": "e",
          "254": "r",
          "255": "v",
          "256": "e",
          "257": "r",
          "258": "}",
          "259": "\"",
          "260": ")",
          "261": "\r",
          "262": "\n",
          "263": " ",
          "264": " ",
          "265": "|",
          "266": ">",
          "267": " ",
          "268": "k",
          "269": "e",
          "270": "e",
          "271": "p",
          "272": "(",
          "273": "c",
          "274": "o",
          "275": "l",
          "276": "u",
          "277": "m",
          "278": "n",
          "279": "s",
          "280": ":",
          "281": " ",
          "282": "[",
          "283": "\"",
          "284": "v",
          "285": "e",
          "286": "e",
          "287": "a",
          "288": "m",
          "289": "V",
          "290": "B",
          "291": "R",
          "292": "V",
          "293": "e",
          "294": "r",
          "295": "s",
          "296": "i",
          "297": "o",
          "298": "n",
          "299": "\"",
          "300": "]",
          "301": ")",
          "302": "\r",
          "303": "\n",
          "304": " ",
          "305": " ",
          "306": "|",
          "307": ">",
          "308": " ",
          "309": "d",
          "310": "i",
          "311": "s",
          "312": "t",
          "313": "i",
          "314": "n",
          "315": "c",
          "316": "t",
          "317": "(",
          "318": "c",
          "319": "o",
          "320": "l",
          "321": "u",
          "322": "m",
          "323": "n",
          "324": ":",
          "325": " ",
          "326": "\"",
          "327": "v",
          "328": "e",
          "329": "e",
          "330": "a",
          "331": "m",
          "332": "V",
          "333": "B",
          "334": "R",
          "335": "V",
          "336": "e",
          "337": "r",
          "338": "s",
          "339": "i",
          "340": "o",
          "341": "n",
          "342": "\"",
          "343": ")",
          "344": "\r",
          "345": "\n",
          "346": " ",
          "347": " ",
          "348": "|",
          "349": ">",
          "350": " ",
          "351": "g",
          "352": "r",
          "353": "o",
          "354": "u",
          "355": "p",
          "356": "(",
          "357": ")",
          "query": "from(bucket: v.defaultBucket)\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"veeam_vbr_info\")\r\n  |> filter(fn: (r) => r[\"veeamVBRVersion\"] != \"\")\r\n  |> filter(fn: (r) => r[\"veeamVBR\"] =~ /${vbrserver:regex}/)\r\n  |> keep(columns: [\"veeamVBRVersion\"])\r\n  |> distinct(column: \"veeamVBRVersion\")\r\n  |> group()"
        },
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "2024-10-28T10:01:36.467Z",
    "to": "2024-12-27T10:01:36.467Z"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Grafana Dashboard for Veeam Backup & Replication",
  "uid": "8W6ydiwVk",
  "version": 21,
  "weekStart": ""
}